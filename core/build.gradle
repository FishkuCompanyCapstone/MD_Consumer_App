plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply from: '../shared_dependencies.gradle'

android {
    compileSdk 33

    def localPropertiesFile = rootProject.file("local.properties")
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(localPropertiesFile))

    defaultConfig {
        minSdk 21
        targetSdk 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField("String", "OTP_TOKEN", "\"" + localProperties['OTP_TOKEN'] + "\"")
            buildConfigField("String", "SERVER_KEY", "\"" + localProperties['SERVER_KEY'] + "\"")
            buildConfigField("String", "serverClientId", "\"" + localProperties['serverClientId'] + "\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
    namespace 'id.fishku.consumer.core'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20"

    // Security
    implementation "androidx.security:security-crypto:1.1.0-alpha04"
    implementation 'com.scottyab:secure-preferences-lib:0.1.7'

    implementation 'com.google.firebase:firebase-config-ktx:21.2.0'
}